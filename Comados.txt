En resumen, primeramente ejecutaremos el siguiente comando:

apt install build-essential git vim xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev

Posteriormente, aplicaremos una actualización del sistema con el comando ‘apt update‘. Acto seguido, tenéis que dirigiros a la carpeta de descargas de vuestro equipo y descargar los proyectos ‘bswpm‘ y ‘sxhkd‘ con los siguientes comandos:

git clone https://github.com/baskerville/bspwm.git
git clone https://github.com/baskerville/sxhkd.git

Para instalar cada uno de estos, lo que debéis hacer es meteros en ambos directorios por separado y ejecutar los comandos ‘make‘ y ‘sudo make install‘.

https://hack4u.io/wp-content/uploads/2022/09/bspwm_resize.txt

apt install cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libuv1-dev libnl-genl-3-dev

git clone –recursive https://github.com/polybar/polybar [Son 2 guiones donde pone ‘recursive‘]

Una vez hecho, os tenéis que meter en la carpeta creada resultante de haber clonado previamente el repositorio y ejecutar los siguientes comandos:

mkdir build
cd build
cmake ..
make -j$(nproc)
sudo make install
Recordad que otra forma de instalar la polybar de manera más sencilla, es haciendo un ‘apt install polybar‘, pero recomendamos esta forma que mostramos con el objetivo de asegurar que la Polybar esté en su última versión.

apt install meson libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev

git clone https://github.com/ibhagwan/picom.git

git submodule update –init –recursive [Son 2 guiones donde pone ‘init‘ y ‘recursive‘]
meson –buildtype=release . build [Son 2 guiones donde pone ‘buildtype‘] 
ninja -C build
sudo ninja -C build install

apt install rofi

Por aquí tienes el archivo ‘color.ini‘ para la Kitty:

https://hack4u.io/wp-content/uploads/2022/09/color.ini_.txt
Por aquí tienes el archivo de configuración ‘kitty.conf‘ para la Kitty:

https://hack4u.io/wp-content/uploads/2022/09/kitty.conf_.txt

Por aquí os comparto mi archivo ‘picom.conf‘:

https://hack4u.io/wp-content/uploads/2022/09/picom.conf_.txt
Recordad que este archivo es totalmente personalizable y debéis ajustarlo en base a las capacidades de vuestro equipo o máquina virtual, para evitar que os genere impacto en el rendimiento.

https://pastebin.com/H87J3nMj

https://pastebin.com/HcKxU3tD [ethernet_status.sh]
https://pastebin.com/sUk5hB4Q [vpn_status.sh]

Por aquí os comparto el script ‘target_to_hack.sh‘:

https://pastebin.com/Z0s6zy7W
Asimismo, os comparto las funciones ‘settarget‘ y ‘cleartarget‘ las cuales debéis incorporar en tu archivo ‘.zshrc‘:

https://pastebin.com/z0Hy7PUB [settarget]
https://pastebin.com/JnHSrq3Y [cleartarget]

Instalar Neovim y poner el alias para que puedas usarlo con el comando nvim
